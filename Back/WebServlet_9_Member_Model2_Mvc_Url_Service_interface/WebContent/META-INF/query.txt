--회원가입 테이블
create table mvcregister(
 id number constraint pk_mvcregister_id primary key,
 pwd varchar2(20) not null,
 email varchar2(20) not null
);

Model2 기반 MVC
MODEL
--DTO : mvcregister 테이블 같은 구조의 클래스 (getter , setter )구현
--DAO 만들기 전에 POOL 사용 
--DAO : CRUD 함수 (DB 연동 connection pool (DBCP))
--SERVICE 현재 생략

VIEW (UI만 일단 만들고 CONTROLLER 생성) 
--jsp (EL & JSTL)  > servlet 쪽에서 저장(request객체), view지정 , forward 한  데이터 가지고 출력
                   > ${requestScope.list}
--보안상 > WEB-INF > Register 폴더  관리

CONTROLLER
-- frontcontroller 역할  servlet (하나의 servlet 모든 요청 받고 처리)

--Client [요청을 받고] , [판단]하고 , 업무 수행 , 데이터 담고 , view 지정 , forward

판단   1. command 방식 :  servlet.do?cmd=login&id=kglim&pwd=1004   > cmd > if(cmd.equals("login"))
         2. url 방식 :      login.do?id=kglim&pwd=1004  :  login.do > url 주소로 요청을 판단


1. 연결 테스트 (context.xml , ojdbc6.jar 추가 , 연결.jsp)

2. package 구조 설정

3.dto

4.dao

5.jsp ui

6.controller
----------------------------------------------------------------------
controller가 요청을 받고 판단하고 서비스를 만들고 (DB,암호화) 실행
위 작업 처럼 했다가 문제가 생김
1. controller의 코딩 양이 많다
2.업무가 추가되거나 변경 되었을 때 유지보수가 힘듬

해결방법
시버스실행 (DB,암호화) 분리 >> service하나 만들어서 역할을 분리 시킴
(dto, dao, 암호화, 알고리즘)
서비스를 이쁘게(표준화) 만들기 : Interface로 만들기

Action 인터페이스 구현: 서비스 들이
